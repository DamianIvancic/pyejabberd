[tox]
envlist =
    clean,
    check,
    {py276,py342,pypy240},
    {py276,py342,pypy240}-nocover,
    report,
    docs

[testenv]
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
deps =
    coverage
testspath = {toxinidir}/tests/test_pyejabberd.py
commands = coverage run {posargs:{[testenv]testspath}}
usedevelop = true

[testenv:spell]
setenv =
    SPELLCHECK=1
commands =
    sphinx-build -b spelling docs dist/docs
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:docs]
whitelist_externals =
    rm
commands =
    rm -rf dist/docs || rmdir /S /Q dist\docs
    sphinx-build -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs
usedevelop = true
deps =
    -r{toxinidir}/docs/requirements.txt

[testenv:check]
deps =
    docutils
    check-manifest
    flake8
    collective.checkdocs
    pygments
usedevelop = true
commands =
    python setup.py checkdocs
    python setup.py check --strict --metadata
    check-manifest {toxinidir}
    flake8 src

[testenv:coveralls]
deps =
    coveralls
usedevelop = true
commands =
    coverage combine
    coverage report
    coveralls

[testenv:report]
commands =
    coverage combine
    coverage report
usedevelop = true
deps = coverage

[testenv:clean]
commands = coverage erase
usedevelop = true
deps = coverage

[testenv:py27-nocover]
commands = python {posargs:{[testenv]testspath}}
usedevelop = false

[testenv:py33-nocover]
commands = python {posargs:{[testenv]testspath}}
usedevelop = false

[testenv:py34-nocover]
commands = python {posargs:{[testenv]testspath}}
usedevelop = false

[testenv:pypy-nocover]
commands = python {posargs:{[testenv]testspath}}
usedevelop = false
